<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>